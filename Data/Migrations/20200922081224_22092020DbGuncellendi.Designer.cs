// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200922081224_22092020DbGuncellendi")]
    partial class _22092020DbGuncellendi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee4611dd-82b1-4c30-94e1-579c9b7b2820"),
                            IsDeleted = false,
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = new Guid("a837cf99-e02a-4d4a-9a7e-44f0b6166c24"),
                            IsDeleted = false,
                            Name = "Kırtasiye"
                        });
                });

            modelBuilder.Entity("Core.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Core.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InnerBarcode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ab5eefa-011e-4da0-a915-721a0a760ee5"),
                            CategoryId = new Guid("ee4611dd-82b1-4c30-94e1-579c9b7b2820"),
                            IsDeleted = false,
                            Name = "Monitor",
                            Price = 2000.50m,
                            Stock = 0
                        },
                        new
                        {
                            Id = new Guid("1da279c8-4b6f-4b5c-949a-8de07238dda6"),
                            CategoryId = new Guid("ee4611dd-82b1-4c30-94e1-579c9b7b2820"),
                            IsDeleted = false,
                            Name = "Klavye",
                            Price = 100.50m,
                            Stock = 0
                        },
                        new
                        {
                            Id = new Guid("5f3ec948-531c-44e4-ba3c-fc5503288852"),
                            CategoryId = new Guid("ee4611dd-82b1-4c30-94e1-579c9b7b2820"),
                            IsDeleted = false,
                            Name = "Laptop",
                            Price = 4000.50m,
                            Stock = 0
                        },
                        new
                        {
                            Id = new Guid("eae4b3e8-1848-409e-a1d6-0f8790e4c273"),
                            CategoryId = new Guid("ee4611dd-82b1-4c30-94e1-579c9b7b2820"),
                            IsDeleted = false,
                            Name = "Masaüstü",
                            Price = 5000.50m,
                            Stock = 0
                        },
                        new
                        {
                            Id = new Guid("63225b0b-8cd0-4d13-90e0-13f9f231b223"),
                            CategoryId = new Guid("a837cf99-e02a-4d4a-9a7e-44f0b6166c24"),
                            IsDeleted = false,
                            Name = "Kalem",
                            Price = 2000.50m,
                            Stock = 0
                        },
                        new
                        {
                            Id = new Guid("6efae425-d1aa-4191-92c9-38c245ff9350"),
                            CategoryId = new Guid("a837cf99-e02a-4d4a-9a7e-44f0b6166c24"),
                            IsDeleted = false,
                            Name = "Kitap",
                            Price = 2000.50m,
                            Stock = 0
                        });
                });

            modelBuilder.Entity("Core.Models.Product", b =>
                {
                    b.HasOne("Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
